#ifndef BENCH
#undef _GLIBCXX_DEBUG
#pragma GCC optimize "Ofast,unroll-loops,omit-frame-pointer,inline"
#pragma GCC option("arch=native", "tune=native", "no-zero-upper")
//ifndef __POPCNT__
#pragma GCC target("movbe,aes,pclmul,avx,avx2,f16c,fma,sse3,ssse3,sse4.1,sse4.2,rdrnd,popcnt,bmi,bmi2,lzcnt")
//#endif
#endif
#include <bits/stdc++.h>

using namespace std;
using i64 = uint64_t;
using i32 = uint32_t;
using i16 = uint16_t;
using i8 = uint8_t;

//12 bits : all // not up,left,right,down // ul, ur, ud, lr, ld, rd // new
i16 legal(i16 neigh)
{
	i16 u = neigh >> 12;
	i16 l = neigh >> 9; l &= 7;
	i16 c = neigh >> 6; c &= 7; if (c) return 0;
	i16 r = neigh >> 3; r &= 7;
	i16 d = neigh & 7;

	i16 res = 0;
	if (u && l && r && d)
		if (u+l+r+d <= 6) res |= 1<<11;
	if (l && r && d)
		if (l+r+d <= 6) res |= 1<<10;
	if (u && r && d)
		if (u+r+d <= 6) res |= 1<<9;
	if (u && l && d)
		if (u+l+d <= 6) res |= 1<<8;
	if (u && l && r)
		if (u+l+r <= 6) res |= 1<<7;
	if (u && l)
		if (u+l <= 6) res |= 1<<6;
	if (u && r)
		if (u+r <= 6) res |= 1<<5;
	if (u && d)
		if (u+d <= 6) res |= 1<<4;
	if (l && r)
		if (l+r <= 6) res |= 1<<3;
	if (l && d)
		if (l+d <= 6) res |= 1<<2;
	if (r && d)
		if (r+d <= 6) res |= 1<<1;
	if (!res) res = 1;
	return res;
}

i16 db[077777+1];

unordered_map<i16, i16> table;
bool is_magic(i64 magic)
{
	table.clear();
	for (i64 i = 0; i <= 077777; i++) {
		i16 hash = (magic*i)>>32;
		if (hash >= (1<<15))
			cout << "skill issue\n";
		const auto& it = table.find(hash);
		if (it == table.end())
			table[hash] = db[i];
		else if (it->second != db[i])
			return false;
    }

	return true;
}


int main ()
{
	for (i16 i = 0; i <= 077777; i++)
		db[i] = legal(i);
	table.reserve(1<<18);

	for (i64 magic = 1; magic < (1 << 16); magic++) {
		if (is_magic(magic<<16)) {
			cout << "Great Success: " << magic << "\n";
		}
	}
}
Found
Great Success: 65151
Great Success: 65279
Great Success: 65365
Great Success: 65407
Great Success: 65417
Great Success: 65450
Great Success: 65459
Great Success: 65470
Great Success: 65471
Great Success: 65479
Great Success: 65481
Great Success: 65482
Great Success: 65483
Great Success: 65493
Great Success: 65495
Great Success: 65497
Great Success: 65501
Great Success: 65502
Great Success: 65503
Great Success: 65507
Great Success: 65509
Great Success: 65510
Great Success: 65514
Great Success: 65515
Great Success: 65517
Great Success: 65518
Great Success: 65519
Great Success: 65522
Great Success: 65523
Great Success: 65525
Great Success: 65526
Great Success: 65527
Great Success: 65529
Great Success: 65530
Great Success: 65531
Great Success: 65533
Great Success: 65534
Great Success: 65535
